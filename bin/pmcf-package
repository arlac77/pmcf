#!/usr/bin/env node

import { join } from "node:path";
import { readFile } from "node:fs/promises";
import { packageDirectory } from "pkg-dir";

import {
  FileContentProvider,
  createPublishingDetails,
  ARCH
} from "npm-pkgbuild";
import { prepare } from "../src/cmd.mjs";

const { root, args, options } = await prepare();

const objectName = args[0];
const object = await root.load(objectName);

const pkgDir = await packageDirectory({ cwd: options.root });

const pkg = JSON.parse(await readFile(join(pkgDir,'package.json'), "utf8"));


console.log(object);
const publishingDetails = createPublishingDetails(["somewhere"]);

const { properties } = await object.preparePackage(options.output);

properties.version = pkg.version;

console.log(properties);

const sources = [options.output].map(base =>
  new FileContentProvider({
    base
  })[Symbol.asyncIterator]()
);

const output = new ARCH(properties);

const fileName = await output.create(sources, [], publishingDetails, {
  ...options,
  destination: "dist"
});

console.log(fileName);
